<?php
/**
 * Copyright 2008, Jefferson GonzÃ¡lez (JegoYalu.com)
 * This file is part of Jaris CMS and licensed under the GPL,
 * check the LICENSE.txt file for version and details or visit
 * https://opensource.org/licenses/GPL-3.0.
 *
 * Database file that stores the upload sqlite backup page.
 */

//For security the file content is skipped from the world eyes :)
exit;
?>

row: 0
    field: title
        <?php print t("Upload Sqlite Backup") ?>
    field;

    field: content
    <?php
        Jaris\Authentication::protectedPage(array("edit_settings"));

        if(
            !isset($_REQUEST["btnUpload"]) &&
            !isset($_REQUEST["btnCancel"])
        )
        {
            Jaris\View::addMessage(
                t("By uploading a backup you will overwrite any existing data on a database."),
                t("Warning")
            );
        }

        if(isset($_REQUEST["btnUpload"]))
        {
            if("" . stristr($_FILES["backup_file"]["type"], "zip") . "" != "")
            {
                if(class_exists("ZipArchive"))
                {
                    $zip = new ZipArchive;

                    $zip->open($_FILES["backup_file"]["tmp_name"]);

                    $zip->extractTo(
                        Jaris\Site::dataDir() . "sqlite/",
                        $zip->getNameIndex(0)
                    );

                    $zip->close();
                }
                else
                {
                    Jaris\View::addMessage(
                        t("ZipArchive extension not enabled. Could not extract zip file."),
                        "error"
                    );
                }
            }
            else
            {
                copy(
                    $_FILES["backup_file"]["tmp_name"],
                    Jaris\Site::dataDir() . "sqlite/" . $_FILES["backup_file"]["name"]
                );
            }

            Jaris\View::addMessage(t("Database restored."));

            t("Uploaded sql database '{database}'.");

            Jaris\Logger::info(
                "Uploaded sql database '{database}'.",
                array(
                    "database" => $_FILES["backup_file"]["name"]
                )
            );

            Jaris\Uri::go("admin/settings/sqlite");
        }
        elseif(isset($_REQUEST["btnCancel"]))
        {
            Jaris\Uri::go("admin/settings/sqlite");
        }

        $parameters["name"] = "sqlite-upload";
        $parameters["class"] = "sqlite-upload";
        $parameters["action"] = Jaris\Uri::url("admin/settings/sqlite/upload");
        $parameters["method"] = "post";
        $parameters["enctype"] = "multipart/form-data";

        $fields[] = array(
            "type" => "file",
            "label" => t("Backup file:"),
            "name" => "backup_file",
            "id" => "backup_file",
            "description" => t("An sql or zip backup file generated by the sqlite backup center.")
        );

        $fields[] = array(
            "type" => "submit",
            "name" => "btnUpload",
            "value" => t("Upload")
        );

        $fields[] = array(
            "type" => "submit",
            "name" => "btnCancel",
            "value" => t("Cancel")
        );

        $fieldset[] = array("fields" => $fields);

        print Jaris\Forms::generate($parameters, $fieldset);
    ?>
    field;

    field: is_system
        1
    field;
row;
